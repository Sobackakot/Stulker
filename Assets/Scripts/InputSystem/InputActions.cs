//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/InputSystem/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""ActionMaps"",
            ""id"": ""a68672b2-b7d2-4e9c-896f-fa23e89e59ef"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""de53db69-ab73-4c75-8af1-5a883aebddd4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""a848dc71-4e52-4ae5-99f7-1e626a17f6d8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""dcefffe8-6633-42cb-8cce-49982b8d5bc2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Walk"",
                    ""type"": ""Button"",
                    ""id"": ""db6f0ca7-2958-48cc-bcc0-a8067037ae14"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""e8096e00-d067-4e22-8566-f41f846656e9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleEquipWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""a74f3ca1-c195-48e1-becd-d345e0b4a382"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""b7990bcc-3880-4f66-9d75-01aeb15adaed"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseDelta"",
                    ""type"": ""Value"",
                    ""id"": ""6c984cd9-66be-40ce-a1e6-60e8be762111"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""9aa15aa9-156b-48ce-8e9f-66dc8e34453c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseMidle"",
                    ""type"": ""Button"",
                    ""id"": ""ed724957-cc64-4f42-9674-b7001646bf5d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""8e57a7ed-f1eb-4a65-84f3-9803bffad5c1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""5df17428-0295-4bcb-8c45-fe155a1afdfb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleInventory"",
                    ""type"": ""Button"",
                    ""id"": ""51dbd497-9881-4753-904b-fc38e521c3a6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleInventoryBox"",
                    ""type"": ""Button"",
                    ""id"": ""7f02134f-14c6-4ce5-86c0-d0f596ecef0e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ExitInventory"",
                    ""type"": ""Button"",
                    ""id"": ""b54b886c-4dbe-4fe7-9297-9a0181ba723d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeanRight"",
                    ""type"": ""Button"",
                    ""id"": ""a978815b-296d-455c-9708-24cc6982c80d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeanLeft"",
                    ""type"": ""Button"",
                    ""id"": ""73c76415-1165-4e3e-aa95-cd6048342978"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraSwitch"",
                    ""type"": ""Button"",
                    ""id"": ""9702933e-6c6f-4b32-8824-4da43bffc712"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""70dbf33c-e1e2-463a-82d1-483533d54ccc"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""148f7171-ca78-4fac-8fdf-58523b7a24fd"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""517a9ff4-6b67-402e-8ebd-eb6eafcac76c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0102949d-1d67-4526-8db4-b04df422d31d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2672bc91-c27a-4284-af34-245c5b7f16b2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""452188e0-1b65-41fb-8fc0-b8d6e58ad865"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e415af9c-2bf6-4559-af2f-effd1493cda1"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4f9ffff-3f60-4a1d-bb68-99b047b290f8"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d72379ee-3995-493f-b87d-4b3ee725531c"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""294a99f5-e77d-4716-9817-137933dc6067"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleEquipWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d50af5d-abdf-48fd-b887-4cabb707618d"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReloadWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""904195e2-837f-4f12-a921-868fff9ea711"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6ea02be-c4b5-4e43-bb52-fb1507a6ac03"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ec7e32e-83ec-48c3-b5f5-57489fb92082"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMidle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b809451b-56dd-4af6-acc4-c766196cc0e4"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61e4eb51-3815-44e2-964b-5ec8eb76e5cf"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0cad69f9-93e8-49ee-ac71-60021edf60fe"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3ae3ea1-ccd9-4f52-850c-4c4de7c1552f"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleInventoryBox"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a0c7b6c-aee8-40fc-bb03-48cbfe5aaa49"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExitInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d18221c-98f3-4850-b7e2-0a180367674b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeanRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1b248b0-9ebc-4e7d-a46a-77590eaae0be"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeanLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b665eb8-9829-48e5-9744-79e167f21313"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ActionMaps
        m_ActionMaps = asset.FindActionMap("ActionMaps", throwIfNotFound: true);
        m_ActionMaps_Move = m_ActionMaps.FindAction("Move", throwIfNotFound: true);
        m_ActionMaps_Jump = m_ActionMaps.FindAction("Jump", throwIfNotFound: true);
        m_ActionMaps_Run = m_ActionMaps.FindAction("Run", throwIfNotFound: true);
        m_ActionMaps_Walk = m_ActionMaps.FindAction("Walk", throwIfNotFound: true);
        m_ActionMaps_Crouch = m_ActionMaps.FindAction("Crouch", throwIfNotFound: true);
        m_ActionMaps_ToggleEquipWeapon = m_ActionMaps.FindAction("ToggleEquipWeapon", throwIfNotFound: true);
        m_ActionMaps_ReloadWeapon = m_ActionMaps.FindAction("ReloadWeapon", throwIfNotFound: true);
        m_ActionMaps_MouseDelta = m_ActionMaps.FindAction("MouseDelta", throwIfNotFound: true);
        m_ActionMaps_MouseScroll = m_ActionMaps.FindAction("MouseScroll", throwIfNotFound: true);
        m_ActionMaps_MouseMidle = m_ActionMaps.FindAction("MouseMidle", throwIfNotFound: true);
        m_ActionMaps_Aim = m_ActionMaps.FindAction("Aim", throwIfNotFound: true);
        m_ActionMaps_Fire = m_ActionMaps.FindAction("Fire", throwIfNotFound: true);
        m_ActionMaps_ToggleInventory = m_ActionMaps.FindAction("ToggleInventory", throwIfNotFound: true);
        m_ActionMaps_ToggleInventoryBox = m_ActionMaps.FindAction("ToggleInventoryBox", throwIfNotFound: true);
        m_ActionMaps_ExitInventory = m_ActionMaps.FindAction("ExitInventory", throwIfNotFound: true);
        m_ActionMaps_LeanRight = m_ActionMaps.FindAction("LeanRight", throwIfNotFound: true);
        m_ActionMaps_LeanLeft = m_ActionMaps.FindAction("LeanLeft", throwIfNotFound: true);
        m_ActionMaps_CameraSwitch = m_ActionMaps.FindAction("CameraSwitch", throwIfNotFound: true);
    }

    ~@InputActions()
    {
        UnityEngine.Debug.Assert(!m_ActionMaps.enabled, "This will cause a leak and performance issues, InputActions.ActionMaps.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ActionMaps
    private readonly InputActionMap m_ActionMaps;
    private List<IActionMapsActions> m_ActionMapsActionsCallbackInterfaces = new List<IActionMapsActions>();
    private readonly InputAction m_ActionMaps_Move;
    private readonly InputAction m_ActionMaps_Jump;
    private readonly InputAction m_ActionMaps_Run;
    private readonly InputAction m_ActionMaps_Walk;
    private readonly InputAction m_ActionMaps_Crouch;
    private readonly InputAction m_ActionMaps_ToggleEquipWeapon;
    private readonly InputAction m_ActionMaps_ReloadWeapon;
    private readonly InputAction m_ActionMaps_MouseDelta;
    private readonly InputAction m_ActionMaps_MouseScroll;
    private readonly InputAction m_ActionMaps_MouseMidle;
    private readonly InputAction m_ActionMaps_Aim;
    private readonly InputAction m_ActionMaps_Fire;
    private readonly InputAction m_ActionMaps_ToggleInventory;
    private readonly InputAction m_ActionMaps_ToggleInventoryBox;
    private readonly InputAction m_ActionMaps_ExitInventory;
    private readonly InputAction m_ActionMaps_LeanRight;
    private readonly InputAction m_ActionMaps_LeanLeft;
    private readonly InputAction m_ActionMaps_CameraSwitch;
    public struct ActionMapsActions
    {
        private @InputActions m_Wrapper;
        public ActionMapsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_ActionMaps_Move;
        public InputAction @Jump => m_Wrapper.m_ActionMaps_Jump;
        public InputAction @Run => m_Wrapper.m_ActionMaps_Run;
        public InputAction @Walk => m_Wrapper.m_ActionMaps_Walk;
        public InputAction @Crouch => m_Wrapper.m_ActionMaps_Crouch;
        public InputAction @ToggleEquipWeapon => m_Wrapper.m_ActionMaps_ToggleEquipWeapon;
        public InputAction @ReloadWeapon => m_Wrapper.m_ActionMaps_ReloadWeapon;
        public InputAction @MouseDelta => m_Wrapper.m_ActionMaps_MouseDelta;
        public InputAction @MouseScroll => m_Wrapper.m_ActionMaps_MouseScroll;
        public InputAction @MouseMidle => m_Wrapper.m_ActionMaps_MouseMidle;
        public InputAction @Aim => m_Wrapper.m_ActionMaps_Aim;
        public InputAction @Fire => m_Wrapper.m_ActionMaps_Fire;
        public InputAction @ToggleInventory => m_Wrapper.m_ActionMaps_ToggleInventory;
        public InputAction @ToggleInventoryBox => m_Wrapper.m_ActionMaps_ToggleInventoryBox;
        public InputAction @ExitInventory => m_Wrapper.m_ActionMaps_ExitInventory;
        public InputAction @LeanRight => m_Wrapper.m_ActionMaps_LeanRight;
        public InputAction @LeanLeft => m_Wrapper.m_ActionMaps_LeanLeft;
        public InputAction @CameraSwitch => m_Wrapper.m_ActionMaps_CameraSwitch;
        public InputActionMap Get() { return m_Wrapper.m_ActionMaps; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionMapsActions set) { return set.Get(); }
        public void AddCallbacks(IActionMapsActions instance)
        {
            if (instance == null || m_Wrapper.m_ActionMapsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ActionMapsActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Walk.started += instance.OnWalk;
            @Walk.performed += instance.OnWalk;
            @Walk.canceled += instance.OnWalk;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @ToggleEquipWeapon.started += instance.OnToggleEquipWeapon;
            @ToggleEquipWeapon.performed += instance.OnToggleEquipWeapon;
            @ToggleEquipWeapon.canceled += instance.OnToggleEquipWeapon;
            @ReloadWeapon.started += instance.OnReloadWeapon;
            @ReloadWeapon.performed += instance.OnReloadWeapon;
            @ReloadWeapon.canceled += instance.OnReloadWeapon;
            @MouseDelta.started += instance.OnMouseDelta;
            @MouseDelta.performed += instance.OnMouseDelta;
            @MouseDelta.canceled += instance.OnMouseDelta;
            @MouseScroll.started += instance.OnMouseScroll;
            @MouseScroll.performed += instance.OnMouseScroll;
            @MouseScroll.canceled += instance.OnMouseScroll;
            @MouseMidle.started += instance.OnMouseMidle;
            @MouseMidle.performed += instance.OnMouseMidle;
            @MouseMidle.canceled += instance.OnMouseMidle;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @ToggleInventory.started += instance.OnToggleInventory;
            @ToggleInventory.performed += instance.OnToggleInventory;
            @ToggleInventory.canceled += instance.OnToggleInventory;
            @ToggleInventoryBox.started += instance.OnToggleInventoryBox;
            @ToggleInventoryBox.performed += instance.OnToggleInventoryBox;
            @ToggleInventoryBox.canceled += instance.OnToggleInventoryBox;
            @ExitInventory.started += instance.OnExitInventory;
            @ExitInventory.performed += instance.OnExitInventory;
            @ExitInventory.canceled += instance.OnExitInventory;
            @LeanRight.started += instance.OnLeanRight;
            @LeanRight.performed += instance.OnLeanRight;
            @LeanRight.canceled += instance.OnLeanRight;
            @LeanLeft.started += instance.OnLeanLeft;
            @LeanLeft.performed += instance.OnLeanLeft;
            @LeanLeft.canceled += instance.OnLeanLeft;
            @CameraSwitch.started += instance.OnCameraSwitch;
            @CameraSwitch.performed += instance.OnCameraSwitch;
            @CameraSwitch.canceled += instance.OnCameraSwitch;
        }

        private void UnregisterCallbacks(IActionMapsActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Walk.started -= instance.OnWalk;
            @Walk.performed -= instance.OnWalk;
            @Walk.canceled -= instance.OnWalk;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @ToggleEquipWeapon.started -= instance.OnToggleEquipWeapon;
            @ToggleEquipWeapon.performed -= instance.OnToggleEquipWeapon;
            @ToggleEquipWeapon.canceled -= instance.OnToggleEquipWeapon;
            @ReloadWeapon.started -= instance.OnReloadWeapon;
            @ReloadWeapon.performed -= instance.OnReloadWeapon;
            @ReloadWeapon.canceled -= instance.OnReloadWeapon;
            @MouseDelta.started -= instance.OnMouseDelta;
            @MouseDelta.performed -= instance.OnMouseDelta;
            @MouseDelta.canceled -= instance.OnMouseDelta;
            @MouseScroll.started -= instance.OnMouseScroll;
            @MouseScroll.performed -= instance.OnMouseScroll;
            @MouseScroll.canceled -= instance.OnMouseScroll;
            @MouseMidle.started -= instance.OnMouseMidle;
            @MouseMidle.performed -= instance.OnMouseMidle;
            @MouseMidle.canceled -= instance.OnMouseMidle;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @ToggleInventory.started -= instance.OnToggleInventory;
            @ToggleInventory.performed -= instance.OnToggleInventory;
            @ToggleInventory.canceled -= instance.OnToggleInventory;
            @ToggleInventoryBox.started -= instance.OnToggleInventoryBox;
            @ToggleInventoryBox.performed -= instance.OnToggleInventoryBox;
            @ToggleInventoryBox.canceled -= instance.OnToggleInventoryBox;
            @ExitInventory.started -= instance.OnExitInventory;
            @ExitInventory.performed -= instance.OnExitInventory;
            @ExitInventory.canceled -= instance.OnExitInventory;
            @LeanRight.started -= instance.OnLeanRight;
            @LeanRight.performed -= instance.OnLeanRight;
            @LeanRight.canceled -= instance.OnLeanRight;
            @LeanLeft.started -= instance.OnLeanLeft;
            @LeanLeft.performed -= instance.OnLeanLeft;
            @LeanLeft.canceled -= instance.OnLeanLeft;
            @CameraSwitch.started -= instance.OnCameraSwitch;
            @CameraSwitch.performed -= instance.OnCameraSwitch;
            @CameraSwitch.canceled -= instance.OnCameraSwitch;
        }

        public void RemoveCallbacks(IActionMapsActions instance)
        {
            if (m_Wrapper.m_ActionMapsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IActionMapsActions instance)
        {
            foreach (var item in m_Wrapper.m_ActionMapsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ActionMapsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ActionMapsActions @ActionMaps => new ActionMapsActions(this);
    public interface IActionMapsActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnWalk(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnToggleEquipWeapon(InputAction.CallbackContext context);
        void OnReloadWeapon(InputAction.CallbackContext context);
        void OnMouseDelta(InputAction.CallbackContext context);
        void OnMouseScroll(InputAction.CallbackContext context);
        void OnMouseMidle(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnToggleInventory(InputAction.CallbackContext context);
        void OnToggleInventoryBox(InputAction.CallbackContext context);
        void OnExitInventory(InputAction.CallbackContext context);
        void OnLeanRight(InputAction.CallbackContext context);
        void OnLeanLeft(InputAction.CallbackContext context);
        void OnCameraSwitch(InputAction.CallbackContext context);
    }
}
